version: "3.9"
services:
  flask:
    build:
      context: app
      dockerfile: Dockerfile
    image: digitalocean.com/flask-python:3.9
    restart: unless-stopped
    environment:
      - APP_ENV="prod"
      - APP_DEBUG="False"
      - APP_PORT=5000
      - MONGODB_DATABASE=flaskdb
      - MONGODB_USERNAME=atabase
      - MONGODB_PASSWORD=atabase
      - MONGODB_HOSTNAME=mongodb
    volumes:
      - appdata:/var/www
    depends_on:
      - mongodb
    networks:
      - frontend
      - backend

  mongodb:
    image: mongo:4.0.8
    restart: unless-stopped
    command: mongod --auth
    environment:
      - MONGO_INITDB_ROOT_USERNAME=atabase
      - MONGO_INITDB_ROOT_PASSWORD=atabase
      - MONGO_INITDB_DATABASE=flaskdb
      - MONGODB_DATA_DIR=/data/db
      - MONDODB_LOG_DIR=/dev/null
    volumes:
      - mongodbdata:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - backend

  webserver:
    build:
      context: nginx
      dockerfile: Dockerfile
    image: digitalocean.com/webserver:latest
    restart: unless-stopped
    environment:
      - APP_ENV="prod"
      - APP_NAME="webserver"
      - APP_DEBUG="false"
      - SERVICE_NAME="webserver"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - nginxdata:/var/log/nginx
    depends_on:
      - flask
    networks:
      - frontend

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  mongodbdata:
    driver: local
  appdata:
    driver: local
  nginxdata:
    driver: local
